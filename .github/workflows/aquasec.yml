name: build
on:
  push:
    branches:
      - main
      - poggenpower*
  pull_request:
    branches: 
      - main
      # comment
env:
  REGISTRY: thlaquasec
  IMAGE_NAME: insecure-bank-app 
  # ${{ github.repository }}

jobs:
  checkout:
    env:
      # REGISTRY: thlaquasec
      # IMAGE_NAME: insecure-bank-app 
      REGISTRY: ghcr
      IMAGE_NAME: insecure-bank-app 
    name: Checkout
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup pipeline enforcer
        uses: aquasecurity/pipeline-enforcer-action@v1.0.0
        with:
          aqua-key: ${{ secrets.AQUA_KEY }}
          aqua-secret: ${{ secrets.AQUA_SECRET }}
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.github.actor }}
          password: ${{ secrets.GH_TOKEN  }}
          # username: ${{ secrets.DOCKERHUB_USERNAME }}
          # password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Run Aqua scanner
        uses: docker://aquasec/aqua-scanner
        with:
          args: trivy fs -d --scanners config,vuln,secret --sast .
          # To customize which severities to scan for, add the following flag: --severity UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
          # To enable SAST scanning, add: --sast
          # To enable npm/dotnet non-lock file scanning, add: --package-json / --dotnet-proj
        env:
          AQUA_KEY: ${{ secrets.AQUA_KEY }}
          AQUA_SECRET: ${{ secrets.AQUA_SECRET }}
          GITHUB_TOKEN: ${{ secrets.PERSONAL_GH_TOKEN }}
          TRIVY_RUN_AS_PLUGIN: 'aqua'
          # For http/https proxy configuration add env vars: HTTP_PROXY/HTTPS_PROXY, CA-CRET (path to CA certificate)
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
      - name: Manifest Generation
        run: |
          export BILLY_SERVER=https://billy.codesec.aquasec.com
          curl -sLo install.sh download.codesec.aquasec.com/billy/install.sh
          curl -sLo install.sh.checksum https://github.com/argonsecurity/releases/releases/latest/download/install.sh.checksum
          if ! cat install.sh.checksum | sha256sum ; then
          echo "install.sh checksum failed"
          exit 1
          fi
          BINDIR="." sh install.sh
          rm install.sh install.sh.checksum
          ./billy generate \
            --access-token "${{ secrets.GH_TOKEN }}" \
            --aqua-key "${{ secrets.AQUA_KEY }}" \
            --aqua-secret "${{ secrets.AQUA_SECRET }}" \
            --artifact-path "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
    outputs:
      image_repo: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
  test:
    needs: checkout
    runs-on: ubuntu-latest
    steps:
      - name: Debug
        run: |
          echo "${{ needs.checkout.outputs.image_repo }}"

  # aqua-billy:
  #   needs: checkout
  #   uses: argon-gh-demo/github-workflows/.github/workflows/billy-ubuntu.yml@main
  #   secrets: 
  #     AQUA_KEY: ${{ secrets.AQUA_KEY }}
  #     AQUA_SECRET: ${{ secrets.AQUA_SECRET }}
  #     GH_TOKEN: ${{ secrets.github_token }}
  #     DOCKERHUB_USERNAME: ${{secrets.DOCKERHUB_USERNAME}}
  #     DOCKERHUB_TOKEN: ${{secrets.DOCKERHUB_TOKEN}}
  #   with:      
  #     ARTIFACT_PATH: "thlaquasec/insecure-bank-app"

#   call-bily-in-local-repo:
#     needs: checkout
#     uses: ./.github/workflows/billy.yml
#     secrets:
#       inherit

  call-workflow-2-in-local-repo:
    uses: ./.github/workflows/post-publish.yml
